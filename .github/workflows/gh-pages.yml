name: Deploy My forest to Pages

on:
  push:
    paths-ignore:
      - "LICENSE"
      - "README.md"
    branches:
      - main

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-22.04 # ubuntu-latest is currently 22.04, but being explicit is fine
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          submodules: recursive

      # <<<--- ADDED STEP: Free up disk space early --->>>
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main # Use a specific commit SHA or tag for stability if preferred
        with:

          tool-cache: true # Changed from your example 'false' to 'true' to actually remove the tool cache
          android: false
          dotnet: false
          haskell: false
          large-packages: false
          docker-images: true
          swap-storage: true
      - uses: extractions/setup-just@v1
        with:
          just-version: 1.40.0
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.29
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
            version: latest
      - name: Setup TeX Live Minimal
        uses: teatimeguest/setup-texlive-action@v3
        id: setup_texlive
        with:
          packages: > # Minimal set based on ent/tex analysis
            scheme-basic
            amsmath amsfonts amssymb graphicx geometry ifthen xcolor hyperref float booktabs
            enumerate xspace xpatch mathtools stmaryrd csquotes standalone microtype tools collection-latexrecommended
            fontspec newpxtext newpxmath utfsym newunicodechar collection-fontsrecommended
            listings
            tikz pgfplots tikz-cd tikz-3dplot tkz-euclide contour dot2texi
            algpseudocodex pseudo tabto tabularx
            amsthm thmtools mdframed tcolorbox ntheorem
            imakeidx cleveref backref makeindex bibtex
            physics worldflags todonotes
            xelatex

      - name: Check TeX Live Installation
        run: |
          echo "GITHUB_PATH is: $GITHUB_PATH"
          tlmgr --version
          which latex
          which xelatex
          which bibtex
          which makeindex

      - name: Cache HTML files
        uses: actions/cache@v4
        with:
          path: output/*.html
          key: ${{ runner.os }}-html-${{ hashFiles('output/*.xml', 'output/*.xsl') }}
          restore-keys: |
            ${{ runner.os }}-html-

      - name: Setup Pages
        if: ${{ !env.ACT }}
        id: pages
        uses: actions/configure-pages@v5
      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: "5.3.0"
          # dune-cache: true # Consider enabling if build times are long and disk space allows
      # - name: Cache opam packages # Opam cache can be large, might conflict with freeing space
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.opam
      #     key: ${{ runner.os }}-opam-${{ hashFiles('**/*.opam') }}
      #     restore-keys: |
      #       ${{ runner.os }}-opam-
      - name: Install forester dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libev-dev
      - name: Install forester
        run: |
          opam pin add forester git+https://git.sr.ht/~jonsterling/ocaml-forester#56de06afe952d752c1a13fdcd8bb56c5fef9956f --yes
          opam install forester --yes --deps-only # Install dependencies first
          opam install forester --yes # Then install forester itself
          # opam install forester.4.3.1 --yes
      # https://github.com/astral-sh/setup-uv
      - name: Setup Python via uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.27"
          # enable-cache: true # UV cache might also consume space

      - name: Build with forester
        run: |
          eval $(opam env)
          export TERM=xterm-256color
          forester --version
          bash ./build.sh
      - name: Check for PDF files
        run: |
          pdf_count=$(find ./output -name "*.pdf" | wc -l)
          if [ "$pdf_count" -eq 0 ]; then
            echo "Error: No PDF files found in the output directory."
            exit 1
          fi
          echo "Found $pdf_count PDF files."
      - name: Fix permissions
        run: |
          chmod -c -R +rX "./output/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload Pages artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./output

  # Deploy job
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
